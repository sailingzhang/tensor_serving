// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/framework/op_def.proto

#include "tensorflow/core/framework/op_def.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_AttrValue_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_OpDef_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OpDef_ArgDef_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_OpDef_AttrDef_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OpDeprecation_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto;
namespace tensorflow {
class OpDef_ArgDefDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OpDef_ArgDef> _instance;
} _OpDef_ArgDef_default_instance_;
class OpDef_AttrDefDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OpDef_AttrDef> _instance;
} _OpDef_AttrDef_default_instance_;
class OpDefDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OpDef> _instance;
} _OpDef_default_instance_;
class OpDeprecationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OpDeprecation> _instance;
} _OpDeprecation_default_instance_;
class OpListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OpList> _instance;
} _OpList_default_instance_;
}  // namespace tensorflow
static void InitDefaultsscc_info_OpDef_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_OpDef_default_instance_;
    new (ptr) ::tensorflow::OpDef();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::OpDef::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_OpDef_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_OpDef_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto}, {
      &scc_info_OpDef_ArgDef_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto.base,
      &scc_info_OpDef_AttrDef_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto.base,
      &scc_info_OpDeprecation_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto.base,}};

static void InitDefaultsscc_info_OpDef_ArgDef_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_OpDef_ArgDef_default_instance_;
    new (ptr) ::tensorflow::OpDef_ArgDef();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::OpDef_ArgDef::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OpDef_ArgDef_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OpDef_ArgDef_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto}, {}};

static void InitDefaultsscc_info_OpDef_AttrDef_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_OpDef_AttrDef_default_instance_;
    new (ptr) ::tensorflow::OpDef_AttrDef();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::OpDef_AttrDef::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_OpDef_AttrDef_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_OpDef_AttrDef_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto}, {
      &scc_info_AttrValue_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto.base,}};

static void InitDefaultsscc_info_OpDeprecation_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_OpDeprecation_default_instance_;
    new (ptr) ::tensorflow::OpDeprecation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::OpDeprecation::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OpDeprecation_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OpDeprecation_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto}, {}};

static void InitDefaultsscc_info_OpList_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_OpList_default_instance_;
    new (ptr) ::tensorflow::OpList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::OpList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_OpList_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_OpList_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto}, {
      &scc_info_OpDef_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::OpDef_ArgDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::OpDef_ArgDef, name_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::OpDef_ArgDef, description_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::OpDef_ArgDef, type_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::OpDef_ArgDef, type_attr_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::OpDef_ArgDef, number_attr_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::OpDef_ArgDef, type_list_attr_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::OpDef_ArgDef, is_ref_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::OpDef_AttrDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::OpDef_AttrDef, name_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::OpDef_AttrDef, type_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::OpDef_AttrDef, default_value_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::OpDef_AttrDef, description_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::OpDef_AttrDef, has_minimum_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::OpDef_AttrDef, minimum_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::OpDef_AttrDef, allowed_values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::OpDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::OpDef, name_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::OpDef, input_arg_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::OpDef, output_arg_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::OpDef, control_output_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::OpDef, attr_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::OpDef, deprecation_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::OpDef, summary_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::OpDef, description_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::OpDef, is_commutative_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::OpDef, is_aggregate_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::OpDef, is_stateful_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::OpDef, allows_uninitialized_input_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::OpDeprecation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::OpDeprecation, version_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::OpDeprecation, explanation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::OpList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::OpList, op_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::OpDef_ArgDef)},
  { 12, -1, sizeof(::tensorflow::OpDef_AttrDef)},
  { 24, -1, sizeof(::tensorflow::OpDef)},
  { 41, -1, sizeof(::tensorflow::OpDeprecation)},
  { 48, -1, sizeof(::tensorflow::OpList)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::_OpDef_ArgDef_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::_OpDef_AttrDef_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::_OpDef_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::_OpDeprecation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::_OpList_default_instance_),
};

const char descriptor_table_protodef_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n&tensorflow/core/framework/op_def.proto"
  "\022\ntensorflow\032*tensorflow/core/framework/"
  "attr_value.proto\032%tensorflow/core/framew"
  "ork/types.proto\"\320\005\n\005OpDef\022\014\n\004name\030\001 \001(\t\022"
  "+\n\tinput_arg\030\002 \003(\0132\030.tensorflow.OpDef.Ar"
  "gDef\022,\n\noutput_arg\030\003 \003(\0132\030.tensorflow.Op"
  "Def.ArgDef\022\026\n\016control_output\030\024 \003(\t\022\'\n\004at"
  "tr\030\004 \003(\0132\031.tensorflow.OpDef.AttrDef\022.\n\013d"
  "eprecation\030\010 \001(\0132\031.tensorflow.OpDeprecat"
  "ion\022\017\n\007summary\030\005 \001(\t\022\023\n\013description\030\006 \001("
  "\t\022\026\n\016is_commutative\030\022 \001(\010\022\024\n\014is_aggregat"
  "e\030\020 \001(\010\022\023\n\013is_stateful\030\021 \001(\010\022\"\n\032allows_u"
  "ninitialized_input\030\023 \001(\010\032\237\001\n\006ArgDef\022\014\n\004n"
  "ame\030\001 \001(\t\022\023\n\013description\030\002 \001(\t\022\"\n\004type\030\003"
  " \001(\0162\024.tensorflow.DataType\022\021\n\ttype_attr\030"
  "\004 \001(\t\022\023\n\013number_attr\030\005 \001(\t\022\026\n\016type_list_"
  "attr\030\006 \001(\t\022\016\n\006is_ref\030\020 \001(\010\032\275\001\n\007AttrDef\022\014"
  "\n\004name\030\001 \001(\t\022\014\n\004type\030\002 \001(\t\022,\n\rdefault_va"
  "lue\030\003 \001(\0132\025.tensorflow.AttrValue\022\023\n\013desc"
  "ription\030\004 \001(\t\022\023\n\013has_minimum\030\005 \001(\010\022\017\n\007mi"
  "nimum\030\006 \001(\003\022-\n\016allowed_values\030\007 \001(\0132\025.te"
  "nsorflow.AttrValue\"5\n\rOpDeprecation\022\017\n\007v"
  "ersion\030\001 \001(\005\022\023\n\013explanation\030\002 \001(\t\"\'\n\006OpL"
  "ist\022\035\n\002op\030\001 \003(\0132\021.tensorflow.OpDefBk\n\030or"
  "g.tensorflow.frameworkB\013OpDefProtosP\001Z=g"
  "ithub.com/tensorflow/tensorflow/tensorfl"
  "ow/go/core/framework\370\001\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto_deps[2] = {
  &::descriptor_table_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto,
  &::descriptor_table_tensorflow_2fcore_2fframework_2ftypes_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto_sccs[5] = {
  &scc_info_OpDef_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto.base,
  &scc_info_OpDef_ArgDef_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto.base,
  &scc_info_OpDef_AttrDef_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto.base,
  &scc_info_OpDeprecation_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto.base,
  &scc_info_OpList_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto_once;
static bool descriptor_table_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto = {
  &descriptor_table_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto_initialized, descriptor_table_protodef_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto, "tensorflow/core/framework/op_def.proto", 1071,
  &descriptor_table_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto_once, descriptor_table_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto_sccs, descriptor_table_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto_deps, 5, 2,
  schemas, file_default_instances, TableStruct_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto::offsets,
  file_level_metadata_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto, 5, file_level_enum_descriptors_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto, file_level_service_descriptors_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto), true);
namespace tensorflow {

// ===================================================================

void OpDef_ArgDef::InitAsDefaultInstance() {
}
class OpDef_ArgDef::_Internal {
 public:
};

OpDef_ArgDef::OpDef_ArgDef()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.OpDef.ArgDef)
}
OpDef_ArgDef::OpDef_ArgDef(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.OpDef.ArgDef)
}
OpDef_ArgDef::OpDef_ArgDef(const OpDef_ArgDef& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArenaNoVirtual());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArenaNoVirtual());
  }
  type_attr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_type_attr().empty()) {
    type_attr_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_type_attr(),
      GetArenaNoVirtual());
  }
  number_attr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_number_attr().empty()) {
    number_attr_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_number_attr(),
      GetArenaNoVirtual());
  }
  type_list_attr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_type_list_attr().empty()) {
    type_list_attr_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_type_list_attr(),
      GetArenaNoVirtual());
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_ref_) -
    reinterpret_cast<char*>(&type_)) + sizeof(is_ref_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.OpDef.ArgDef)
}

void OpDef_ArgDef::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OpDef_ArgDef_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_attr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  number_attr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_list_attr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_ref_) -
      reinterpret_cast<char*>(&type_)) + sizeof(is_ref_));
}

OpDef_ArgDef::~OpDef_ArgDef() {
  // @@protoc_insertion_point(destructor:tensorflow.OpDef.ArgDef)
  SharedDtor();
}

void OpDef_ArgDef::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_attr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  number_attr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_list_attr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OpDef_ArgDef::ArenaDtor(void* object) {
  OpDef_ArgDef* _this = reinterpret_cast< OpDef_ArgDef* >(object);
  (void)_this;
}
void OpDef_ArgDef::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OpDef_ArgDef::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OpDef_ArgDef& OpDef_ArgDef::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OpDef_ArgDef_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto.base);
  return *internal_default_instance();
}


void OpDef_ArgDef::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.OpDef.ArgDef)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  type_attr_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  number_attr_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  type_list_attr_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_ref_) -
      reinterpret_cast<char*>(&type_)) + sizeof(is_ref_));
  _internal_metadata_.Clear();
}

const char* OpDef_ArgDef::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tensorflow.OpDef.ArgDef.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tensorflow.OpDef.ArgDef.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .tensorflow.DataType type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::tensorflow::DataType>(val));
        } else goto handle_unusual;
        continue;
      // string type_attr = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_type_attr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tensorflow.OpDef.ArgDef.type_attr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string number_attr = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_number_attr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tensorflow.OpDef.ArgDef.number_attr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string type_list_attr = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_type_list_attr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tensorflow.OpDef.ArgDef.type_list_attr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool is_ref = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          is_ref_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OpDef_ArgDef::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.OpDef.ArgDef)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.OpDef.ArgDef.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.OpDef.ArgDef.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  // .tensorflow.DataType type = 3;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_type(), target);
  }

  // string type_attr = 4;
  if (this->type_attr().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type_attr().data(), static_cast<int>(this->_internal_type_attr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.OpDef.ArgDef.type_attr");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_type_attr(), target);
  }

  // string number_attr = 5;
  if (this->number_attr().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_number_attr().data(), static_cast<int>(this->_internal_number_attr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.OpDef.ArgDef.number_attr");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_number_attr(), target);
  }

  // string type_list_attr = 6;
  if (this->type_list_attr().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type_list_attr().data(), static_cast<int>(this->_internal_type_list_attr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.OpDef.ArgDef.type_list_attr");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_type_list_attr(), target);
  }

  // bool is_ref = 16;
  if (this->is_ref() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(16, this->_internal_is_ref(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.OpDef.ArgDef)
  return target;
}

size_t OpDef_ArgDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.OpDef.ArgDef)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string type_attr = 4;
  if (this->type_attr().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type_attr());
  }

  // string number_attr = 5;
  if (this->number_attr().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_number_attr());
  }

  // string type_list_attr = 6;
  if (this->type_list_attr().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type_list_attr());
  }

  // .tensorflow.DataType type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  // bool is_ref = 16;
  if (this->is_ref() != 0) {
    total_size += 2 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OpDef_ArgDef::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.OpDef.ArgDef)
  GOOGLE_DCHECK_NE(&from, this);
  const OpDef_ArgDef* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OpDef_ArgDef>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.OpDef.ArgDef)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.OpDef.ArgDef)
    MergeFrom(*source);
  }
}

void OpDef_ArgDef::MergeFrom(const OpDef_ArgDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.OpDef.ArgDef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.type_attr().size() > 0) {
    _internal_set_type_attr(from._internal_type_attr());
  }
  if (from.number_attr().size() > 0) {
    _internal_set_number_attr(from._internal_number_attr());
  }
  if (from.type_list_attr().size() > 0) {
    _internal_set_type_list_attr(from._internal_type_list_attr());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.is_ref() != 0) {
    _internal_set_is_ref(from._internal_is_ref());
  }
}

void OpDef_ArgDef::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.OpDef.ArgDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpDef_ArgDef::CopyFrom(const OpDef_ArgDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.OpDef.ArgDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpDef_ArgDef::IsInitialized() const {
  return true;
}

void OpDef_ArgDef::InternalSwap(OpDef_ArgDef* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  type_attr_.Swap(&other->type_attr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  number_attr_.Swap(&other->number_attr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  type_list_attr_.Swap(&other->type_list_attr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(is_ref_, other->is_ref_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OpDef_ArgDef::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OpDef_AttrDef::InitAsDefaultInstance() {
  ::tensorflow::_OpDef_AttrDef_default_instance_._instance.get_mutable()->default_value_ = const_cast< ::tensorflow::AttrValue*>(
      ::tensorflow::AttrValue::internal_default_instance());
  ::tensorflow::_OpDef_AttrDef_default_instance_._instance.get_mutable()->allowed_values_ = const_cast< ::tensorflow::AttrValue*>(
      ::tensorflow::AttrValue::internal_default_instance());
}
class OpDef_AttrDef::_Internal {
 public:
  static const ::tensorflow::AttrValue& default_value(const OpDef_AttrDef* msg);
  static const ::tensorflow::AttrValue& allowed_values(const OpDef_AttrDef* msg);
};

const ::tensorflow::AttrValue&
OpDef_AttrDef::_Internal::default_value(const OpDef_AttrDef* msg) {
  return *msg->default_value_;
}
const ::tensorflow::AttrValue&
OpDef_AttrDef::_Internal::allowed_values(const OpDef_AttrDef* msg) {
  return *msg->allowed_values_;
}
void OpDef_AttrDef::unsafe_arena_set_allocated_default_value(
    ::tensorflow::AttrValue* default_value) {
  if (GetArenaNoVirtual() == nullptr) {
    delete default_value_;
  }
  default_value_ = default_value;
  if (default_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.OpDef.AttrDef.default_value)
}
void OpDef_AttrDef::clear_default_value() {
  if (GetArenaNoVirtual() == nullptr && default_value_ != nullptr) {
    delete default_value_;
  }
  default_value_ = nullptr;
}
void OpDef_AttrDef::unsafe_arena_set_allocated_allowed_values(
    ::tensorflow::AttrValue* allowed_values) {
  if (GetArenaNoVirtual() == nullptr) {
    delete allowed_values_;
  }
  allowed_values_ = allowed_values;
  if (allowed_values) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.OpDef.AttrDef.allowed_values)
}
void OpDef_AttrDef::clear_allowed_values() {
  if (GetArenaNoVirtual() == nullptr && allowed_values_ != nullptr) {
    delete allowed_values_;
  }
  allowed_values_ = nullptr;
}
OpDef_AttrDef::OpDef_AttrDef()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.OpDef.AttrDef)
}
OpDef_AttrDef::OpDef_AttrDef(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.OpDef.AttrDef)
}
OpDef_AttrDef::OpDef_AttrDef(const OpDef_AttrDef& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArenaNoVirtual());
  }
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_type().empty()) {
    type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_type(),
      GetArenaNoVirtual());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArenaNoVirtual());
  }
  if (from._internal_has_default_value()) {
    default_value_ = new ::tensorflow::AttrValue(*from.default_value_);
  } else {
    default_value_ = nullptr;
  }
  if (from._internal_has_allowed_values()) {
    allowed_values_ = new ::tensorflow::AttrValue(*from.allowed_values_);
  } else {
    allowed_values_ = nullptr;
  }
  ::memcpy(&minimum_, &from.minimum_,
    static_cast<size_t>(reinterpret_cast<char*>(&has_minimum_) -
    reinterpret_cast<char*>(&minimum_)) + sizeof(has_minimum_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.OpDef.AttrDef)
}

void OpDef_AttrDef::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OpDef_AttrDef_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&default_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&has_minimum_) -
      reinterpret_cast<char*>(&default_value_)) + sizeof(has_minimum_));
}

OpDef_AttrDef::~OpDef_AttrDef() {
  // @@protoc_insertion_point(destructor:tensorflow.OpDef.AttrDef)
  SharedDtor();
}

void OpDef_AttrDef::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete default_value_;
  if (this != internal_default_instance()) delete allowed_values_;
}

void OpDef_AttrDef::ArenaDtor(void* object) {
  OpDef_AttrDef* _this = reinterpret_cast< OpDef_AttrDef* >(object);
  (void)_this;
}
void OpDef_AttrDef::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OpDef_AttrDef::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OpDef_AttrDef& OpDef_AttrDef::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OpDef_AttrDef_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto.base);
  return *internal_default_instance();
}


void OpDef_AttrDef::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.OpDef.AttrDef)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == nullptr && default_value_ != nullptr) {
    delete default_value_;
  }
  default_value_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && allowed_values_ != nullptr) {
    delete allowed_values_;
  }
  allowed_values_ = nullptr;
  ::memset(&minimum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&has_minimum_) -
      reinterpret_cast<char*>(&minimum_)) + sizeof(has_minimum_));
  _internal_metadata_.Clear();
}

const char* OpDef_AttrDef::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tensorflow.OpDef.AttrDef.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tensorflow.OpDef.AttrDef.type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .tensorflow.AttrValue default_value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tensorflow.OpDef.AttrDef.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool has_minimum = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          has_minimum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 minimum = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          minimum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .tensorflow.AttrValue allowed_values = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_allowed_values(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OpDef_AttrDef::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.OpDef.AttrDef)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.OpDef.AttrDef.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.OpDef.AttrDef.type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_type(), target);
  }

  // .tensorflow.AttrValue default_value = 3;
  if (this->has_default_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::default_value(this), target, stream);
  }

  // string description = 4;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.OpDef.AttrDef.description");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_description(), target);
  }

  // bool has_minimum = 5;
  if (this->has_minimum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_has_minimum(), target);
  }

  // int64 minimum = 6;
  if (this->minimum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_minimum(), target);
  }

  // .tensorflow.AttrValue allowed_values = 7;
  if (this->has_allowed_values()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::allowed_values(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.OpDef.AttrDef)
  return target;
}

size_t OpDef_AttrDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.OpDef.AttrDef)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string type = 2;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // string description = 4;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // .tensorflow.AttrValue default_value = 3;
  if (this->has_default_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *default_value_);
  }

  // .tensorflow.AttrValue allowed_values = 7;
  if (this->has_allowed_values()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *allowed_values_);
  }

  // int64 minimum = 6;
  if (this->minimum() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_minimum());
  }

  // bool has_minimum = 5;
  if (this->has_minimum() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OpDef_AttrDef::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.OpDef.AttrDef)
  GOOGLE_DCHECK_NE(&from, this);
  const OpDef_AttrDef* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OpDef_AttrDef>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.OpDef.AttrDef)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.OpDef.AttrDef)
    MergeFrom(*source);
  }
}

void OpDef_AttrDef::MergeFrom(const OpDef_AttrDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.OpDef.AttrDef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.type().size() > 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.has_default_value()) {
    _internal_mutable_default_value()->::tensorflow::AttrValue::MergeFrom(from._internal_default_value());
  }
  if (from.has_allowed_values()) {
    _internal_mutable_allowed_values()->::tensorflow::AttrValue::MergeFrom(from._internal_allowed_values());
  }
  if (from.minimum() != 0) {
    _internal_set_minimum(from._internal_minimum());
  }
  if (from.has_minimum() != 0) {
    _internal_set_has_minimum(from._internal_has_minimum());
  }
}

void OpDef_AttrDef::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.OpDef.AttrDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpDef_AttrDef::CopyFrom(const OpDef_AttrDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.OpDef.AttrDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpDef_AttrDef::IsInitialized() const {
  return true;
}

void OpDef_AttrDef::InternalSwap(OpDef_AttrDef* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  type_.Swap(&other->type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(default_value_, other->default_value_);
  swap(allowed_values_, other->allowed_values_);
  swap(minimum_, other->minimum_);
  swap(has_minimum_, other->has_minimum_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OpDef_AttrDef::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OpDef::InitAsDefaultInstance() {
  ::tensorflow::_OpDef_default_instance_._instance.get_mutable()->deprecation_ = const_cast< ::tensorflow::OpDeprecation*>(
      ::tensorflow::OpDeprecation::internal_default_instance());
}
class OpDef::_Internal {
 public:
  static const ::tensorflow::OpDeprecation& deprecation(const OpDef* msg);
};

const ::tensorflow::OpDeprecation&
OpDef::_Internal::deprecation(const OpDef* msg) {
  return *msg->deprecation_;
}
void OpDef::unsafe_arena_set_allocated_deprecation(
    ::tensorflow::OpDeprecation* deprecation) {
  if (GetArenaNoVirtual() == nullptr) {
    delete deprecation_;
  }
  deprecation_ = deprecation;
  if (deprecation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.OpDef.deprecation)
}
OpDef::OpDef()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.OpDef)
}
OpDef::OpDef(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  input_arg_(arena),
  output_arg_(arena),
  attr_(arena),
  control_output_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.OpDef)
}
OpDef::OpDef(const OpDef& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      input_arg_(from.input_arg_),
      output_arg_(from.output_arg_),
      attr_(from.attr_),
      control_output_(from.control_output_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArenaNoVirtual());
  }
  summary_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_summary().empty()) {
    summary_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_summary(),
      GetArenaNoVirtual());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArenaNoVirtual());
  }
  if (from._internal_has_deprecation()) {
    deprecation_ = new ::tensorflow::OpDeprecation(*from.deprecation_);
  } else {
    deprecation_ = nullptr;
  }
  ::memcpy(&is_commutative_, &from.is_commutative_,
    static_cast<size_t>(reinterpret_cast<char*>(&allows_uninitialized_input_) -
    reinterpret_cast<char*>(&is_commutative_)) + sizeof(allows_uninitialized_input_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.OpDef)
}

void OpDef::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OpDef_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  summary_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&deprecation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&allows_uninitialized_input_) -
      reinterpret_cast<char*>(&deprecation_)) + sizeof(allows_uninitialized_input_));
}

OpDef::~OpDef() {
  // @@protoc_insertion_point(destructor:tensorflow.OpDef)
  SharedDtor();
}

void OpDef::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  summary_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete deprecation_;
}

void OpDef::ArenaDtor(void* object) {
  OpDef* _this = reinterpret_cast< OpDef* >(object);
  (void)_this;
}
void OpDef::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OpDef::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OpDef& OpDef::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OpDef_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto.base);
  return *internal_default_instance();
}


void OpDef::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.OpDef)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_arg_.Clear();
  output_arg_.Clear();
  attr_.Clear();
  control_output_.Clear();
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  summary_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == nullptr && deprecation_ != nullptr) {
    delete deprecation_;
  }
  deprecation_ = nullptr;
  ::memset(&is_commutative_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&allows_uninitialized_input_) -
      reinterpret_cast<char*>(&is_commutative_)) + sizeof(allows_uninitialized_input_));
  _internal_metadata_.Clear();
}

const char* OpDef::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tensorflow.OpDef.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .tensorflow.OpDef.ArgDef input_arg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_input_arg(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .tensorflow.OpDef.ArgDef output_arg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_output_arg(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .tensorflow.OpDef.AttrDef attr = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_attr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // string summary = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_summary();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tensorflow.OpDef.summary"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tensorflow.OpDef.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .tensorflow.OpDeprecation deprecation = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_deprecation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool is_aggregate = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          is_aggregate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool is_stateful = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          is_stateful_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool is_commutative = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          is_commutative_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool allows_uninitialized_input = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 152)) {
          allows_uninitialized_input_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string control_output = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          ptr -= 2;
          do {
            ptr += 2;
            auto str = _internal_add_control_output();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tensorflow.OpDef.control_output"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<162>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OpDef::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.OpDef)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.OpDef.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // repeated .tensorflow.OpDef.ArgDef input_arg = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_input_arg_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_input_arg(i), target, stream);
  }

  // repeated .tensorflow.OpDef.ArgDef output_arg = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_output_arg_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_output_arg(i), target, stream);
  }

  // repeated .tensorflow.OpDef.AttrDef attr = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_attr_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_attr(i), target, stream);
  }

  // string summary = 5;
  if (this->summary().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_summary().data(), static_cast<int>(this->_internal_summary().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.OpDef.summary");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_summary(), target);
  }

  // string description = 6;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.OpDef.description");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_description(), target);
  }

  // .tensorflow.OpDeprecation deprecation = 8;
  if (this->has_deprecation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::deprecation(this), target, stream);
  }

  // bool is_aggregate = 16;
  if (this->is_aggregate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(16, this->_internal_is_aggregate(), target);
  }

  // bool is_stateful = 17;
  if (this->is_stateful() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(17, this->_internal_is_stateful(), target);
  }

  // bool is_commutative = 18;
  if (this->is_commutative() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(18, this->_internal_is_commutative(), target);
  }

  // bool allows_uninitialized_input = 19;
  if (this->allows_uninitialized_input() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(19, this->_internal_allows_uninitialized_input(), target);
  }

  // repeated string control_output = 20;
  for (int i = 0, n = this->_internal_control_output_size(); i < n; i++) {
    const auto& s = this->_internal_control_output(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.OpDef.control_output");
    target = stream->WriteString(20, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.OpDef)
  return target;
}

size_t OpDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.OpDef)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tensorflow.OpDef.ArgDef input_arg = 2;
  total_size += 1UL * this->_internal_input_arg_size();
  for (const auto& msg : this->input_arg_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .tensorflow.OpDef.ArgDef output_arg = 3;
  total_size += 1UL * this->_internal_output_arg_size();
  for (const auto& msg : this->output_arg_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .tensorflow.OpDef.AttrDef attr = 4;
  total_size += 1UL * this->_internal_attr_size();
  for (const auto& msg : this->attr_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated string control_output = 20;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(control_output_.size());
  for (int i = 0, n = control_output_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      control_output_.Get(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string summary = 5;
  if (this->summary().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_summary());
  }

  // string description = 6;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // .tensorflow.OpDeprecation deprecation = 8;
  if (this->has_deprecation()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *deprecation_);
  }

  // bool is_commutative = 18;
  if (this->is_commutative() != 0) {
    total_size += 2 + 1;
  }

  // bool is_aggregate = 16;
  if (this->is_aggregate() != 0) {
    total_size += 2 + 1;
  }

  // bool is_stateful = 17;
  if (this->is_stateful() != 0) {
    total_size += 2 + 1;
  }

  // bool allows_uninitialized_input = 19;
  if (this->allows_uninitialized_input() != 0) {
    total_size += 2 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OpDef::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.OpDef)
  GOOGLE_DCHECK_NE(&from, this);
  const OpDef* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OpDef>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.OpDef)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.OpDef)
    MergeFrom(*source);
  }
}

void OpDef::MergeFrom(const OpDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.OpDef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  input_arg_.MergeFrom(from.input_arg_);
  output_arg_.MergeFrom(from.output_arg_);
  attr_.MergeFrom(from.attr_);
  control_output_.MergeFrom(from.control_output_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.summary().size() > 0) {
    _internal_set_summary(from._internal_summary());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.has_deprecation()) {
    _internal_mutable_deprecation()->::tensorflow::OpDeprecation::MergeFrom(from._internal_deprecation());
  }
  if (from.is_commutative() != 0) {
    _internal_set_is_commutative(from._internal_is_commutative());
  }
  if (from.is_aggregate() != 0) {
    _internal_set_is_aggregate(from._internal_is_aggregate());
  }
  if (from.is_stateful() != 0) {
    _internal_set_is_stateful(from._internal_is_stateful());
  }
  if (from.allows_uninitialized_input() != 0) {
    _internal_set_allows_uninitialized_input(from._internal_allows_uninitialized_input());
  }
}

void OpDef::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.OpDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpDef::CopyFrom(const OpDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.OpDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpDef::IsInitialized() const {
  return true;
}

void OpDef::InternalSwap(OpDef* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  input_arg_.InternalSwap(&other->input_arg_);
  output_arg_.InternalSwap(&other->output_arg_);
  attr_.InternalSwap(&other->attr_);
  control_output_.InternalSwap(&other->control_output_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  summary_.Swap(&other->summary_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(deprecation_, other->deprecation_);
  swap(is_commutative_, other->is_commutative_);
  swap(is_aggregate_, other->is_aggregate_);
  swap(is_stateful_, other->is_stateful_);
  swap(allows_uninitialized_input_, other->allows_uninitialized_input_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OpDef::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OpDeprecation::InitAsDefaultInstance() {
}
class OpDeprecation::_Internal {
 public:
};

OpDeprecation::OpDeprecation()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.OpDeprecation)
}
OpDeprecation::OpDeprecation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.OpDeprecation)
}
OpDeprecation::OpDeprecation(const OpDeprecation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  explanation_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_explanation().empty()) {
    explanation_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_explanation(),
      GetArenaNoVirtual());
  }
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.OpDeprecation)
}

void OpDeprecation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OpDeprecation_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto.base);
  explanation_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_ = 0;
}

OpDeprecation::~OpDeprecation() {
  // @@protoc_insertion_point(destructor:tensorflow.OpDeprecation)
  SharedDtor();
}

void OpDeprecation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  explanation_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OpDeprecation::ArenaDtor(void* object) {
  OpDeprecation* _this = reinterpret_cast< OpDeprecation* >(object);
  (void)_this;
}
void OpDeprecation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OpDeprecation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OpDeprecation& OpDeprecation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OpDeprecation_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto.base);
  return *internal_default_instance();
}


void OpDeprecation::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.OpDeprecation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  explanation_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  version_ = 0;
  _internal_metadata_.Clear();
}

const char* OpDeprecation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string explanation = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_explanation();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tensorflow.OpDeprecation.explanation"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OpDeprecation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.OpDeprecation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 version = 1;
  if (this->version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_version(), target);
  }

  // string explanation = 2;
  if (this->explanation().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_explanation().data(), static_cast<int>(this->_internal_explanation().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.OpDeprecation.explanation");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_explanation(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.OpDeprecation)
  return target;
}

size_t OpDeprecation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.OpDeprecation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string explanation = 2;
  if (this->explanation().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_explanation());
  }

  // int32 version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OpDeprecation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.OpDeprecation)
  GOOGLE_DCHECK_NE(&from, this);
  const OpDeprecation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OpDeprecation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.OpDeprecation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.OpDeprecation)
    MergeFrom(*source);
  }
}

void OpDeprecation::MergeFrom(const OpDeprecation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.OpDeprecation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.explanation().size() > 0) {
    _internal_set_explanation(from._internal_explanation());
  }
  if (from.version() != 0) {
    _internal_set_version(from._internal_version());
  }
}

void OpDeprecation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.OpDeprecation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpDeprecation::CopyFrom(const OpDeprecation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.OpDeprecation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpDeprecation::IsInitialized() const {
  return true;
}

void OpDeprecation::InternalSwap(OpDeprecation* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  explanation_.Swap(&other->explanation_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(version_, other->version_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OpDeprecation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OpList::InitAsDefaultInstance() {
}
class OpList::_Internal {
 public:
};

OpList::OpList()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.OpList)
}
OpList::OpList(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  op_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.OpList)
}
OpList::OpList(const OpList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      op_(from.op_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.OpList)
}

void OpList::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OpList_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto.base);
}

OpList::~OpList() {
  // @@protoc_insertion_point(destructor:tensorflow.OpList)
  SharedDtor();
}

void OpList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
}

void OpList::ArenaDtor(void* object) {
  OpList* _this = reinterpret_cast< OpList* >(object);
  (void)_this;
}
void OpList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OpList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OpList& OpList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OpList_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto.base);
  return *internal_default_instance();
}


void OpList::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.OpList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  op_.Clear();
  _internal_metadata_.Clear();
}

const char* OpList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .tensorflow.OpDef op = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_op(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OpList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.OpList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.OpDef op = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_op_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_op(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.OpList)
  return target;
}

size_t OpList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.OpList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tensorflow.OpDef op = 1;
  total_size += 1UL * this->_internal_op_size();
  for (const auto& msg : this->op_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OpList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.OpList)
  GOOGLE_DCHECK_NE(&from, this);
  const OpList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OpList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.OpList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.OpList)
    MergeFrom(*source);
  }
}

void OpList::MergeFrom(const OpList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.OpList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  op_.MergeFrom(from.op_);
}

void OpList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.OpList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpList::CopyFrom(const OpList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.OpList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpList::IsInitialized() const {
  return true;
}

void OpList::InternalSwap(OpList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  op_.InternalSwap(&other->op_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OpList::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::tensorflow::OpDef_ArgDef* Arena::CreateMaybeMessage< ::tensorflow::OpDef_ArgDef >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::OpDef_ArgDef >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::OpDef_AttrDef* Arena::CreateMaybeMessage< ::tensorflow::OpDef_AttrDef >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::OpDef_AttrDef >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::OpDef* Arena::CreateMaybeMessage< ::tensorflow::OpDef >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::OpDef >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::OpDeprecation* Arena::CreateMaybeMessage< ::tensorflow::OpDeprecation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::OpDeprecation >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::OpList* Arena::CreateMaybeMessage< ::tensorflow::OpList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::OpList >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
