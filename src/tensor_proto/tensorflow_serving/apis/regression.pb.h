// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_serving/apis/regression.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_tensorflow_5fserving_2fapis_2fregression_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_tensorflow_5fserving_2fapis_2fregression_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "tensorflow_serving/apis/input.pb.h"
#include "tensorflow_serving/apis/model.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_tensorflow_5fserving_2fapis_2fregression_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_tensorflow_5fserving_2fapis_2fregression_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_tensorflow_5fserving_2fapis_2fregression_2eproto;
namespace tensorflow {
namespace serving {
class Regression;
class RegressionDefaultTypeInternal;
extern RegressionDefaultTypeInternal _Regression_default_instance_;
class RegressionRequest;
class RegressionRequestDefaultTypeInternal;
extern RegressionRequestDefaultTypeInternal _RegressionRequest_default_instance_;
class RegressionResponse;
class RegressionResponseDefaultTypeInternal;
extern RegressionResponseDefaultTypeInternal _RegressionResponse_default_instance_;
class RegressionResult;
class RegressionResultDefaultTypeInternal;
extern RegressionResultDefaultTypeInternal _RegressionResult_default_instance_;
}  // namespace serving
}  // namespace tensorflow
PROTOBUF_NAMESPACE_OPEN
template<> ::tensorflow::serving::Regression* Arena::CreateMaybeMessage<::tensorflow::serving::Regression>(Arena*);
template<> ::tensorflow::serving::RegressionRequest* Arena::CreateMaybeMessage<::tensorflow::serving::RegressionRequest>(Arena*);
template<> ::tensorflow::serving::RegressionResponse* Arena::CreateMaybeMessage<::tensorflow::serving::RegressionResponse>(Arena*);
template<> ::tensorflow::serving::RegressionResult* Arena::CreateMaybeMessage<::tensorflow::serving::RegressionResult>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace tensorflow {
namespace serving {

// ===================================================================

class Regression :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tensorflow.serving.Regression) */ {
 public:
  Regression();
  virtual ~Regression();

  Regression(const Regression& from);
  Regression(Regression&& from) noexcept
    : Regression() {
    *this = ::std::move(from);
  }

  inline Regression& operator=(const Regression& from) {
    CopyFrom(from);
    return *this;
  }
  inline Regression& operator=(Regression&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Regression& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Regression* internal_default_instance() {
    return reinterpret_cast<const Regression*>(
               &_Regression_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Regression& a, Regression& b) {
    a.Swap(&b);
  }
  inline void Swap(Regression* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Regression* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Regression* New() const final {
    return CreateMaybeMessage<Regression>(nullptr);
  }

  Regression* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Regression>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Regression& from);
  void MergeFrom(const Regression& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Regression* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tensorflow.serving.Regression";
  }
  protected:
  explicit Regression(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_5fserving_2fapis_2fregression_2eproto);
    return ::descriptor_table_tensorflow_5fserving_2fapis_2fregression_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // float value = 1;
  void clear_value();
  float value() const;
  void set_value(float value);
  private:
  float _internal_value() const;
  void _internal_set_value(float value);
  public:

  // @@protoc_insertion_point(class_scope:tensorflow.serving.Regression)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  float value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_tensorflow_5fserving_2fapis_2fregression_2eproto;
};
// -------------------------------------------------------------------

class RegressionResult :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tensorflow.serving.RegressionResult) */ {
 public:
  RegressionResult();
  virtual ~RegressionResult();

  RegressionResult(const RegressionResult& from);
  RegressionResult(RegressionResult&& from) noexcept
    : RegressionResult() {
    *this = ::std::move(from);
  }

  inline RegressionResult& operator=(const RegressionResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegressionResult& operator=(RegressionResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RegressionResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RegressionResult* internal_default_instance() {
    return reinterpret_cast<const RegressionResult*>(
               &_RegressionResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(RegressionResult& a, RegressionResult& b) {
    a.Swap(&b);
  }
  inline void Swap(RegressionResult* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RegressionResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RegressionResult* New() const final {
    return CreateMaybeMessage<RegressionResult>(nullptr);
  }

  RegressionResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RegressionResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RegressionResult& from);
  void MergeFrom(const RegressionResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RegressionResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tensorflow.serving.RegressionResult";
  }
  protected:
  explicit RegressionResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_5fserving_2fapis_2fregression_2eproto);
    return ::descriptor_table_tensorflow_5fserving_2fapis_2fregression_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRegressionsFieldNumber = 1,
  };
  // repeated .tensorflow.serving.Regression regressions = 1;
  int regressions_size() const;
  private:
  int _internal_regressions_size() const;
  public:
  void clear_regressions();
  ::tensorflow::serving::Regression* mutable_regressions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tensorflow::serving::Regression >*
      mutable_regressions();
  private:
  const ::tensorflow::serving::Regression& _internal_regressions(int index) const;
  ::tensorflow::serving::Regression* _internal_add_regressions();
  public:
  const ::tensorflow::serving::Regression& regressions(int index) const;
  ::tensorflow::serving::Regression* add_regressions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tensorflow::serving::Regression >&
      regressions() const;

  // @@protoc_insertion_point(class_scope:tensorflow.serving.RegressionResult)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tensorflow::serving::Regression > regressions_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_tensorflow_5fserving_2fapis_2fregression_2eproto;
};
// -------------------------------------------------------------------

class RegressionRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tensorflow.serving.RegressionRequest) */ {
 public:
  RegressionRequest();
  virtual ~RegressionRequest();

  RegressionRequest(const RegressionRequest& from);
  RegressionRequest(RegressionRequest&& from) noexcept
    : RegressionRequest() {
    *this = ::std::move(from);
  }

  inline RegressionRequest& operator=(const RegressionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegressionRequest& operator=(RegressionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RegressionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RegressionRequest* internal_default_instance() {
    return reinterpret_cast<const RegressionRequest*>(
               &_RegressionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(RegressionRequest& a, RegressionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(RegressionRequest* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RegressionRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RegressionRequest* New() const final {
    return CreateMaybeMessage<RegressionRequest>(nullptr);
  }

  RegressionRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RegressionRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RegressionRequest& from);
  void MergeFrom(const RegressionRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RegressionRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tensorflow.serving.RegressionRequest";
  }
  protected:
  explicit RegressionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_5fserving_2fapis_2fregression_2eproto);
    return ::descriptor_table_tensorflow_5fserving_2fapis_2fregression_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModelSpecFieldNumber = 1,
    kInputFieldNumber = 2,
  };
  // .tensorflow.serving.ModelSpec model_spec = 1;
  bool has_model_spec() const;
  private:
  bool _internal_has_model_spec() const;
  public:
  void clear_model_spec();
  const ::tensorflow::serving::ModelSpec& model_spec() const;
  ::tensorflow::serving::ModelSpec* release_model_spec();
  ::tensorflow::serving::ModelSpec* mutable_model_spec();
  void set_allocated_model_spec(::tensorflow::serving::ModelSpec* model_spec);
  private:
  const ::tensorflow::serving::ModelSpec& _internal_model_spec() const;
  ::tensorflow::serving::ModelSpec* _internal_mutable_model_spec();
  public:
  void unsafe_arena_set_allocated_model_spec(
      ::tensorflow::serving::ModelSpec* model_spec);
  ::tensorflow::serving::ModelSpec* unsafe_arena_release_model_spec();

  // .tensorflow.serving.Input input = 2;
  bool has_input() const;
  private:
  bool _internal_has_input() const;
  public:
  void clear_input();
  const ::tensorflow::serving::Input& input() const;
  ::tensorflow::serving::Input* release_input();
  ::tensorflow::serving::Input* mutable_input();
  void set_allocated_input(::tensorflow::serving::Input* input);
  private:
  const ::tensorflow::serving::Input& _internal_input() const;
  ::tensorflow::serving::Input* _internal_mutable_input();
  public:
  void unsafe_arena_set_allocated_input(
      ::tensorflow::serving::Input* input);
  ::tensorflow::serving::Input* unsafe_arena_release_input();

  // @@protoc_insertion_point(class_scope:tensorflow.serving.RegressionRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::tensorflow::serving::ModelSpec* model_spec_;
  ::tensorflow::serving::Input* input_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_tensorflow_5fserving_2fapis_2fregression_2eproto;
};
// -------------------------------------------------------------------

class RegressionResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tensorflow.serving.RegressionResponse) */ {
 public:
  RegressionResponse();
  virtual ~RegressionResponse();

  RegressionResponse(const RegressionResponse& from);
  RegressionResponse(RegressionResponse&& from) noexcept
    : RegressionResponse() {
    *this = ::std::move(from);
  }

  inline RegressionResponse& operator=(const RegressionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegressionResponse& operator=(RegressionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RegressionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RegressionResponse* internal_default_instance() {
    return reinterpret_cast<const RegressionResponse*>(
               &_RegressionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(RegressionResponse& a, RegressionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(RegressionResponse* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RegressionResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RegressionResponse* New() const final {
    return CreateMaybeMessage<RegressionResponse>(nullptr);
  }

  RegressionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RegressionResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RegressionResponse& from);
  void MergeFrom(const RegressionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RegressionResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tensorflow.serving.RegressionResponse";
  }
  protected:
  explicit RegressionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_5fserving_2fapis_2fregression_2eproto);
    return ::descriptor_table_tensorflow_5fserving_2fapis_2fregression_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
    kModelSpecFieldNumber = 2,
  };
  // .tensorflow.serving.RegressionResult result = 1;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  const ::tensorflow::serving::RegressionResult& result() const;
  ::tensorflow::serving::RegressionResult* release_result();
  ::tensorflow::serving::RegressionResult* mutable_result();
  void set_allocated_result(::tensorflow::serving::RegressionResult* result);
  private:
  const ::tensorflow::serving::RegressionResult& _internal_result() const;
  ::tensorflow::serving::RegressionResult* _internal_mutable_result();
  public:
  void unsafe_arena_set_allocated_result(
      ::tensorflow::serving::RegressionResult* result);
  ::tensorflow::serving::RegressionResult* unsafe_arena_release_result();

  // .tensorflow.serving.ModelSpec model_spec = 2;
  bool has_model_spec() const;
  private:
  bool _internal_has_model_spec() const;
  public:
  void clear_model_spec();
  const ::tensorflow::serving::ModelSpec& model_spec() const;
  ::tensorflow::serving::ModelSpec* release_model_spec();
  ::tensorflow::serving::ModelSpec* mutable_model_spec();
  void set_allocated_model_spec(::tensorflow::serving::ModelSpec* model_spec);
  private:
  const ::tensorflow::serving::ModelSpec& _internal_model_spec() const;
  ::tensorflow::serving::ModelSpec* _internal_mutable_model_spec();
  public:
  void unsafe_arena_set_allocated_model_spec(
      ::tensorflow::serving::ModelSpec* model_spec);
  ::tensorflow::serving::ModelSpec* unsafe_arena_release_model_spec();

  // @@protoc_insertion_point(class_scope:tensorflow.serving.RegressionResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::tensorflow::serving::RegressionResult* result_;
  ::tensorflow::serving::ModelSpec* model_spec_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_tensorflow_5fserving_2fapis_2fregression_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Regression

// float value = 1;
inline void Regression::clear_value() {
  value_ = 0;
}
inline float Regression::_internal_value() const {
  return value_;
}
inline float Regression::value() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.Regression.value)
  return _internal_value();
}
inline void Regression::_internal_set_value(float value) {
  
  value_ = value;
}
inline void Regression::set_value(float value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:tensorflow.serving.Regression.value)
}

// -------------------------------------------------------------------

// RegressionResult

// repeated .tensorflow.serving.Regression regressions = 1;
inline int RegressionResult::_internal_regressions_size() const {
  return regressions_.size();
}
inline int RegressionResult::regressions_size() const {
  return _internal_regressions_size();
}
inline void RegressionResult::clear_regressions() {
  regressions_.Clear();
}
inline ::tensorflow::serving::Regression* RegressionResult::mutable_regressions(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.RegressionResult.regressions)
  return regressions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tensorflow::serving::Regression >*
RegressionResult::mutable_regressions() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.serving.RegressionResult.regressions)
  return &regressions_;
}
inline const ::tensorflow::serving::Regression& RegressionResult::_internal_regressions(int index) const {
  return regressions_.Get(index);
}
inline const ::tensorflow::serving::Regression& RegressionResult::regressions(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.RegressionResult.regressions)
  return _internal_regressions(index);
}
inline ::tensorflow::serving::Regression* RegressionResult::_internal_add_regressions() {
  return regressions_.Add();
}
inline ::tensorflow::serving::Regression* RegressionResult::add_regressions() {
  // @@protoc_insertion_point(field_add:tensorflow.serving.RegressionResult.regressions)
  return _internal_add_regressions();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::tensorflow::serving::Regression >&
RegressionResult::regressions() const {
  // @@protoc_insertion_point(field_list:tensorflow.serving.RegressionResult.regressions)
  return regressions_;
}

// -------------------------------------------------------------------

// RegressionRequest

// .tensorflow.serving.ModelSpec model_spec = 1;
inline bool RegressionRequest::_internal_has_model_spec() const {
  return this != internal_default_instance() && model_spec_ != nullptr;
}
inline bool RegressionRequest::has_model_spec() const {
  return _internal_has_model_spec();
}
inline const ::tensorflow::serving::ModelSpec& RegressionRequest::_internal_model_spec() const {
  const ::tensorflow::serving::ModelSpec* p = model_spec_;
  return p != nullptr ? *p : *reinterpret_cast<const ::tensorflow::serving::ModelSpec*>(
      &::tensorflow::serving::_ModelSpec_default_instance_);
}
inline const ::tensorflow::serving::ModelSpec& RegressionRequest::model_spec() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.RegressionRequest.model_spec)
  return _internal_model_spec();
}
inline ::tensorflow::serving::ModelSpec* RegressionRequest::release_model_spec() {
  auto temp = unsafe_arena_release_model_spec();
  if (GetArenaNoVirtual() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::tensorflow::serving::ModelSpec* RegressionRequest::unsafe_arena_release_model_spec() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.RegressionRequest.model_spec)
  
  ::tensorflow::serving::ModelSpec* temp = model_spec_;
  model_spec_ = nullptr;
  return temp;
}
inline ::tensorflow::serving::ModelSpec* RegressionRequest::_internal_mutable_model_spec() {
  
  if (model_spec_ == nullptr) {
    auto* p = CreateMaybeMessage<::tensorflow::serving::ModelSpec>(GetArenaNoVirtual());
    model_spec_ = p;
  }
  return model_spec_;
}
inline ::tensorflow::serving::ModelSpec* RegressionRequest::mutable_model_spec() {
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.RegressionRequest.model_spec)
  return _internal_mutable_model_spec();
}
inline void RegressionRequest::set_allocated_model_spec(::tensorflow::serving::ModelSpec* model_spec) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(model_spec_);
  }
  if (model_spec) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(model_spec)->GetArena();
    if (message_arena != submessage_arena) {
      model_spec = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, model_spec, submessage_arena);
    }
    
  } else {
    
  }
  model_spec_ = model_spec;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.RegressionRequest.model_spec)
}

// .tensorflow.serving.Input input = 2;
inline bool RegressionRequest::_internal_has_input() const {
  return this != internal_default_instance() && input_ != nullptr;
}
inline bool RegressionRequest::has_input() const {
  return _internal_has_input();
}
inline const ::tensorflow::serving::Input& RegressionRequest::_internal_input() const {
  const ::tensorflow::serving::Input* p = input_;
  return p != nullptr ? *p : *reinterpret_cast<const ::tensorflow::serving::Input*>(
      &::tensorflow::serving::_Input_default_instance_);
}
inline const ::tensorflow::serving::Input& RegressionRequest::input() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.RegressionRequest.input)
  return _internal_input();
}
inline ::tensorflow::serving::Input* RegressionRequest::release_input() {
  auto temp = unsafe_arena_release_input();
  if (GetArenaNoVirtual() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::tensorflow::serving::Input* RegressionRequest::unsafe_arena_release_input() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.RegressionRequest.input)
  
  ::tensorflow::serving::Input* temp = input_;
  input_ = nullptr;
  return temp;
}
inline ::tensorflow::serving::Input* RegressionRequest::_internal_mutable_input() {
  
  if (input_ == nullptr) {
    auto* p = CreateMaybeMessage<::tensorflow::serving::Input>(GetArenaNoVirtual());
    input_ = p;
  }
  return input_;
}
inline ::tensorflow::serving::Input* RegressionRequest::mutable_input() {
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.RegressionRequest.input)
  return _internal_mutable_input();
}
inline void RegressionRequest::set_allocated_input(::tensorflow::serving::Input* input) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(input_);
  }
  if (input) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(input)->GetArena();
    if (message_arena != submessage_arena) {
      input = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, input, submessage_arena);
    }
    
  } else {
    
  }
  input_ = input;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.RegressionRequest.input)
}

// -------------------------------------------------------------------

// RegressionResponse

// .tensorflow.serving.ModelSpec model_spec = 2;
inline bool RegressionResponse::_internal_has_model_spec() const {
  return this != internal_default_instance() && model_spec_ != nullptr;
}
inline bool RegressionResponse::has_model_spec() const {
  return _internal_has_model_spec();
}
inline const ::tensorflow::serving::ModelSpec& RegressionResponse::_internal_model_spec() const {
  const ::tensorflow::serving::ModelSpec* p = model_spec_;
  return p != nullptr ? *p : *reinterpret_cast<const ::tensorflow::serving::ModelSpec*>(
      &::tensorflow::serving::_ModelSpec_default_instance_);
}
inline const ::tensorflow::serving::ModelSpec& RegressionResponse::model_spec() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.RegressionResponse.model_spec)
  return _internal_model_spec();
}
inline ::tensorflow::serving::ModelSpec* RegressionResponse::release_model_spec() {
  auto temp = unsafe_arena_release_model_spec();
  if (GetArenaNoVirtual() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::tensorflow::serving::ModelSpec* RegressionResponse::unsafe_arena_release_model_spec() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.RegressionResponse.model_spec)
  
  ::tensorflow::serving::ModelSpec* temp = model_spec_;
  model_spec_ = nullptr;
  return temp;
}
inline ::tensorflow::serving::ModelSpec* RegressionResponse::_internal_mutable_model_spec() {
  
  if (model_spec_ == nullptr) {
    auto* p = CreateMaybeMessage<::tensorflow::serving::ModelSpec>(GetArenaNoVirtual());
    model_spec_ = p;
  }
  return model_spec_;
}
inline ::tensorflow::serving::ModelSpec* RegressionResponse::mutable_model_spec() {
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.RegressionResponse.model_spec)
  return _internal_mutable_model_spec();
}
inline void RegressionResponse::set_allocated_model_spec(::tensorflow::serving::ModelSpec* model_spec) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(model_spec_);
  }
  if (model_spec) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(model_spec)->GetArena();
    if (message_arena != submessage_arena) {
      model_spec = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, model_spec, submessage_arena);
    }
    
  } else {
    
  }
  model_spec_ = model_spec;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.RegressionResponse.model_spec)
}

// .tensorflow.serving.RegressionResult result = 1;
inline bool RegressionResponse::_internal_has_result() const {
  return this != internal_default_instance() && result_ != nullptr;
}
inline bool RegressionResponse::has_result() const {
  return _internal_has_result();
}
inline void RegressionResponse::clear_result() {
  if (GetArenaNoVirtual() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
}
inline const ::tensorflow::serving::RegressionResult& RegressionResponse::_internal_result() const {
  const ::tensorflow::serving::RegressionResult* p = result_;
  return p != nullptr ? *p : *reinterpret_cast<const ::tensorflow::serving::RegressionResult*>(
      &::tensorflow::serving::_RegressionResult_default_instance_);
}
inline const ::tensorflow::serving::RegressionResult& RegressionResponse::result() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.RegressionResponse.result)
  return _internal_result();
}
inline ::tensorflow::serving::RegressionResult* RegressionResponse::release_result() {
  auto temp = unsafe_arena_release_result();
  if (GetArenaNoVirtual() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::tensorflow::serving::RegressionResult* RegressionResponse::unsafe_arena_release_result() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.RegressionResponse.result)
  
  ::tensorflow::serving::RegressionResult* temp = result_;
  result_ = nullptr;
  return temp;
}
inline ::tensorflow::serving::RegressionResult* RegressionResponse::_internal_mutable_result() {
  
  if (result_ == nullptr) {
    auto* p = CreateMaybeMessage<::tensorflow::serving::RegressionResult>(GetArenaNoVirtual());
    result_ = p;
  }
  return result_;
}
inline ::tensorflow::serving::RegressionResult* RegressionResponse::mutable_result() {
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.RegressionResponse.result)
  return _internal_mutable_result();
}
inline void RegressionResponse::set_allocated_result(::tensorflow::serving::RegressionResult* result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete result_;
  }
  if (result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(result);
    if (message_arena != submessage_arena) {
      result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, result, submessage_arena);
    }
    
  } else {
    
  }
  result_ = result;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.RegressionResponse.result)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace serving
}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_tensorflow_5fserving_2fapis_2fregression_2eproto
